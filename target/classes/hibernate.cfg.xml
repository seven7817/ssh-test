<?xml version="1.0" encoding="UTF-8"?>
<!-- 在类的根路径下创建名称为hibernate.cfg.xml的配置文件
	导入约束：dtd约束 这个约束在hibernate-core-5.0.7.Final.jar的org.hibernate包的最后面的hibernate-configuration-3.0.dtd中
 -->
<!DOCTYPE hibernate-configuration PUBLIC
	"-//Hibernate/Hibernate Configuration DTD 3.0//EN"
	"http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">
<hibernate-configuration>
	<!-- session-factory的作用就是用于创建session对象的
	session对象就是hibernate中操作数据库的核心对象
	这里需要记住创建session-factory必须的三部分信息
		第一部分：
			连接数据库的信息
		第二部分：
			hibernate的可选配置
		第三部分：
			映射文件的位置
		  -->
	<session-factory>
		<!-- 第一部分：连接数据的信息   位置在D:\java\lib\hibernate-release-5.0.7.Final\project\etc\hibernate.properties 的mysql部分-->
		<property name="hibernate.connection.driver_class">com.mysql.jdbc.Driver</property>
		<property name="hibernate.connection.url">jdbc:mysql://localhost:3306/mydatabase1?useSSL=false</property>
		<property name="hibernate.connection.username">root</property>
		<property name="hibernate.connection.password">123456</property>
		<!-- 数据库的方言，就是不同数据库之间的扩展 -->
		<property name="hibernate.dialect">org.hibernate.dialect.MySQLDialect</property>
		<!-- 第二部分：hibernate的可选配置 -->
		<property name="hibernate.show_sql">true</property>  <!-- 是否显示hibernate生成的sql语句 -->
		<property name="hibernate.format_sql">false</property>  <!-- 是否使用格式化输出sql语句到控制台 -->
		<property name="hibernate.hbm2ddl.auto">update</property>  <!-- 配置hibernate采用何种方式生成DDL语句 -->
		<!-- 设置hibernate的连接池提供商  
		 D:\java\lib\hibernate-release-5.0.7.Final\project\etc\hibernate.properties里面搜索connection.pro-->
	  	<property name="hibernate.connection.provider_class">org.hibernate.connection.C3P0ConnectionProvider</property>
	  	<!-- 把sessiono和线程绑定，从而实现一个线程只有一个session -->
	  	<property name="hibernate.current_session_context_class">thread</property>
		<!-- 第三部分：映射配置文件的位置 -->
		
		<mapping class = "hx.com.modle.User"></mapping>
	</session-factory>
</hibernate-configuration>



